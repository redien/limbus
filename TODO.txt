
# Limbus - A cross-platform multimedia library.
# Written in 2014 by Jesper Oskarsson jesosk@gmail.com
#
# To the extent possible under law, the author(s) have dedicated all copyright
# and related and neighboring rights to this software to the public domain worldwide.
# This software is distributed without any warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication along with this software.
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.


List of things to do:
-----------------------

- Fix Lua binding on OS X
- Fully implement the filesystem API for WinAPI & OS X
- Make input devices' event loops independent from the window's polling.
- Produce an error if window is polled for events before it is created.
- Move from CMake to Premake4 (or progen.lua?)
- Bug: X11 LBWindow implementation seems to halt the application when setting a caption.
       Looks like it only occurs when there are a specific number of events queued.
- Create an automatic system for destructing objects in the reverse order they were created.
  This is needed for languages that rely on garbage collection where the order of destruction
  cannot be controlled.
- Make it possible to include headers from other projects and have cbind scan them for typedefs.
- Make it possible to automatically copy enums from C headers to class bindings.
- Replace asserts with real error handling.
- Look over the LBAudioStream API
- Implement custom_context.h for X11.
- Turn off use of bundled Lua in the repo and make the use of Lua configurable.
- Add CMake variables for disabling all of the subsystems.
- Add events for windows getting focused/unfocused
- Clean up WinAPI implementations.
	- Clear up window positioning
- Write a Main page for the Doxygen documentation.
- Write tutorials for setting up a window and OpenGL context.
- Update all of the examples.
- Clarify project description in the README and on SF.net.
- Standardize filenames for implementation source files.
- Make sure the library compiles as C++.
- Research ways of testing the library and implement new tests.
- Make it possible for the users to plug-in their own code for memory handling.
- Add support for OpenGL 3.0+ contexts.
- Add clipboard API
- Load shared libraries for APIs dynamically similarly to SDL 