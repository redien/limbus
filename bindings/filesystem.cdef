
/*
          Copyright Jesper Oskarsson 2009 - 2010.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt)
*/

class Limbus::Filesystem
{
	private ptr fs;
	public bool constructed;

	public void construct()
	{
		this.fs = limbus::lb_filesystem_construct();

		this.constructed = false;
		if (limbus::lb_filesystem_constructed( this.fs ) == 1)
		{
			this.constructed = true;
		}
	}

	public void destruct()
	{
		if (limbus::lb_filesystem_constructed( this.fs ) == 1)
		{
			limbus::lb_filesystem_destruct( this.fs );
		}

		this.constructed = false;
	}

	list_factory string directory_entries( string path ) list_directory next_directory_entry get_directory_entry_name;

	public bool list_directory( string path )
	{
		if (limbus::lb_filesystem_directory_list( this.fs, path ) == 1)
		{
			return true;
		}

		return false;
	}

	public bool next_directory_entry()
	{
		if (limbus::lb_filesystem_directory_next_entry( this.fs ) == 1)
		{
			return true;
		}

		return false;
	}

	public string get_directory_entry_name()
	{
		return limbus::lb_filesystem_directory_get_entry( this.fs );
	}

	public uint file_size( string path )
	{
		return limbus::lb_filesystem_file_size( this.fs, path );
	}

	public bool path_is_directory( string path )
	{
	    if (limbus::lb_filesystem_path_is_directory( this.fs, path ) == 1)
	    {
	        return true;
        }

        return false;
	}

	public bool path_is_file( string path )
	{
	    if (limbus::lb_filesystem_path_is_file( this.fs, path ) == 1)
	    {
	        return true;
        }

        return false;
	}

	public string get_working_directory()
	{
		return limbus::lb_filesystem_get_working_directory( this.fs );
	}
}

