
# Limbus - A cross-platform multimedia library.
# Written in 2014 by Jesper Oskarsson jesosk@gmail.com
#
# To the extent possible under law, the author(s) have dedicated all copyright
# and related and neighboring rights to this software to the public domain worldwide.
# This software is distributed without any warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication along with this software.
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.

class Limbus::Filesystem
	var fs : ptr

	def construct() : void
		this.fs = limbus::lb_filesystem_construct()
	end

	def destruct() : void
		if limbus::lb_filesystem_constructed( this.fs ) == limbus::LBFilesystemNoError then
			limbus::lb_filesystem_destruct( this.fs )
		end
	end

	property working_directory : string
	get
		return limbus::lb_filesystem_get_working_directory( this.fs )
	end

	#list_factory string directory_entries( string path ) list_directory next_directory_entry get_directory_entry_name;

	def list_directory( path : string ) : bool
		if limbus::lb_filesystem_directory_list( this.fs, path ) == 1 then
			return true
		end

		return false
	end

	def next_directory_entry!() : bool
		if limbus::lb_filesystem_directory_next_entry( this.fs ) == 1 then
			return true
		end

		return false
	end

	def get_directory_entry_name() : string
		return limbus::lb_filesystem_directory_get_entry( this.fs )
	end

	def file_size( path : string ) : uint
		return limbus::lb_filesystem_file_size( this.fs, path )
	end

	def directory?( path : string ) : bool
	    if limbus::lb_filesystem_path_is_directory( this.fs, path ) == 1 then
	        return true
        end

        return false
	end

	def file?( path : string ) : bool
	    if limbus::lb_filesystem_path_is_file( this.fs, path ) == 1 then
	        return true
        end

        return false
	end
end

