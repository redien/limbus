
# Limbus - A cross-platform multimedia library.
# Written in 2014 by Jesper Oskarsson jesosk@gmail.com
#
# To the extent possible under law, the author(s) have dedicated all copyright
# and related and neighboring rights to this software to the public domain worldwide.
# This software is distributed without any warranty.
#
# You should have received a copy of the CC0 Public Domain Dedication along with this software.
# If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.

class Limbus::Keyboard : Limbus::InputDevice
	var keyboard : ptr
	
	signal on_key_event( key : int, pressed : bool )
	signal on_unicode( utf32 : int, utf8 : string )

	def construct() : void
		this.keyboard = limbus::lb_keyboard_construct()
	end
	
	def destruct() : void
		limbus::lb_keyboard_destruct( this.keyboard )
	end
	
	def get_impl() : ptr
		return this.keyboard
	end

	def poll_events() : bool
	    var found_event : bool
		found_event = false

		while limbus::lb_keyboard_next_event( this.keyboard ) == 1 do
			var e : int
			e = limbus::lb_keyboard_get_event_type( this.keyboard )

			if e == limbus::LBKeyboardEvent::LBKeyboardEventKeyPress then
				on_key_event( limbus::lb_keyboard_get_event_key( this.keyboard ), true )
			end
			if e == limbus::LBKeyboardEvent::LBKeyboardEventKeyRelease then
				on_key_event( limbus::lb_keyboard_get_event_key( this.keyboard ), false )
			end
			if e == limbus::LBKeyboardEvent::LBKeyboardEventUnicode then
				on_unicode( limbus::lb_keyboard_get_event_utf32( this.keyboard ),
							limbus::lb_keyboard_get_event_utf8( this.keyboard ) )
			end

            found_event = true
		end

		return found_event
	end
end
