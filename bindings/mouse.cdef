
/*
          Copyright Jesper Oskarsson 2009 - 2010.
 Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at
          http://www.boost.org/LICENSE_1_0.txt)
*/

class Limbus::Mouse
{
	private ptr mouse;

	signal on_button_event( int button, bool pressed, int x, int y );
	signal on_motion_event( int x, int y );

	property int x
	{
		return limbus::lb_mouse_get_x( this.mouse );
	}
	{
		limbus::lb_mouse_set_x( this.mouse, value );
	};
	property int y
	{
		return limbus::lb_mouse_get_y( this.mouse );
	}
	{
		limbus::lb_mouse_set_y( this.mouse, value );
	};

	public void construct( Limbus::OpenglWindow window )
	{
		this.mouse = limbus::lb_mouse_construct();
		limbus::lb_window_add_input_device( window.get_window_impl(), this.mouse );
	}

	public void destruct()
	{
		limbus::lb_mouse_destruct( this.mouse );
	}

	public void show_cursor( bool state )
	{
		limbus::lb_mouse_cursor_show( this.mouse, state );
	}

	public bool poll_events()
	{
	    bool found_event;
		found_event = false;
		while (limbus::lb_mouse_next_event( this.mouse ) == 1)
		{
			int e;
			e = limbus::lb_mouse_get_event_type( this.mouse );
			
			if (e == limbus::LBMouseEvent::LBMouseEventButtonPress)
			{
				on_button_event( limbus::lb_mouse_get_event_button( this.mouse ),
								 true,
								 limbus::lb_mouse_get_event_x( this.mouse ),
								 limbus::lb_mouse_get_event_y( this.mouse ) );
			}

			if (e == limbus::LBMouseEvent::LBMouseEventButtonRelease)
			{
				on_button_event( limbus::lb_mouse_get_event_button( this.mouse ),
								 false,
								 limbus::lb_mouse_get_event_x( this.mouse ),
								 limbus::lb_mouse_get_event_y( this.mouse ) );
			}

			if (e == limbus::LBMouseEvent::LBMouseEventMotion)
			{
				on_motion_event( limbus::lb_mouse_get_event_x( this.mouse ),
								 limbus::lb_mouse_get_event_y( this.mouse ) );
			}

			found_event = true;
		}
		
		return found_event;
	}
}

